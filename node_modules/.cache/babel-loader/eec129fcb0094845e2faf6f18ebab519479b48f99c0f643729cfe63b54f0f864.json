{"ast":null,"code":"var _jsxFileName = \"/Users/ahmed/react-nav-query/src/App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport { BrowserRouter as Router, Routes, Route, Link } from \"react-router-dom\";\nimport { Home } from \"./pages/Home\";\nimport { Contact } from \"./pages/Contact\";\nimport { Error } from \"./pages/Error\";\nimport { Navbar } from \"./pages/Navbar\";\nimport { Profile } from \"./pages/Profile\";\nimport { useState, createContext } from \"react\";\nimport { QueryClient, QueryClientProvider } from \"@tanstack/react-query\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AppContext = /*#__PURE__*/createContext();\nfunction App() {\n  _s();\n  const client = new QueryClient({\n    defaultOptions: {\n      queries: {\n        refetchOnWindowFocus: false\n      }\n    }\n  });\n  const [username, setUsername] = useState(\"AhmedTech!\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(QueryClientProvider, {\n      client: client,\n      children: /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n        value: {\n          username,\n          setUsername\n        },\n        children: /*#__PURE__*/_jsxDEV(Router, {\n          children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Routes, {\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              path: \"/\",\n              element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 40\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/profile\",\n              element: /*#__PURE__*/_jsxDEV(Profile, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 47\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/contact\",\n              element: /*#__PURE__*/_jsxDEV(Contact, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 47\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"*\",\n              element: /*#__PURE__*/_jsxDEV(Error, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 40\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"CX2R2iK44ukUUFlDYiH6Z1sPCZw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["BrowserRouter","Router","Routes","Route","Link","Home","Contact","Error","Navbar","Profile","useState","createContext","QueryClient","QueryClientProvider","jsxDEV","_jsxDEV","AppContext","App","_s","client","defaultOptions","queries","refetchOnWindowFocus","username","setUsername","className","children","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","path","element","_c","$RefreshReg$"],"sources":["/Users/ahmed/react-nav-query/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport { BrowserRouter as Router, Routes, Route, Link } from \"react-router-dom\";\nimport { Home } from \"./pages/Home\";\nimport { Contact } from \"./pages/Contact\";\nimport { Error } from \"./pages/Error\";\nimport { Navbar } from \"./pages/Navbar\";\nimport { Profile } from \"./pages/Profile\";\nimport { useState, createContext } from \"react\";\nimport { QueryClient, QueryClientProvider } from \"@tanstack/react-query\";\n\nexport const AppContext = createContext();\n\n\n\nfunction App() {\n  const client = new QueryClient({\n    defaultOptions: {\n      queries: {\n        refetchOnWindowFocus: false,\n      },\n    },\n  });\n  const [username, setUsername] = useState(\"AhmedTech!\");\n  return (\n    <div className=\"App\">\n      <QueryClientProvider client={client}>\n        <AppContext.Provider value={{ username, setUsername }}>\n          <Router>\n            <Navbar />\n            <Routes>\n              <Route path=\"/\" element={<Home />} />\n              <Route path=\"/profile\" element={<Profile />} />\n              <Route path=\"/contact\" element={<Contact />} />\n              <Route path=\"*\" element={<Error />} />\n            </Routes>\n          </Router>\n        </AppContext.Provider>\n      </QueryClientProvider>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}